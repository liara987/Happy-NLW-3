{"ast":null,"code":"\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport isEqual from 'fast-deep-equal';\nimport MapLayer from './MapLayer';\nimport pick from './utils/pick';\nvar OPTIONS = ['stroke', 'color', 'weight', 'opacity', 'lineCap', 'lineJoin', 'dashArray', 'dashOffset', 'fill', 'fillColor', 'fillOpacity', 'fillRule', 'bubblingMouseEvents', 'renderer', 'className', // Interactive Layer\n'interactive', // Layer\n'pane', 'attribution'];\n\nvar Path = /*#__PURE__*/function (_MapLayer) {\n  _inheritsLoose(Path, _MapLayer);\n\n  function Path(props) {\n    var _this;\n\n    _this = _MapLayer.call(this, props) || this;\n\n    if (_this.contextValue == null) {\n      _this.contextValue = _extends(_extends({}, props.leaflet), {}, {\n        popupContainer: _this.leafletElement\n      });\n    }\n\n    return _this;\n  }\n\n  var _proto = Path.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    _MapLayer.prototype.componentDidUpdate.call(this, prevProps);\n\n    this.setStyleIfChanged(prevProps, this.props);\n  };\n\n  _proto.getPathOptions = function getPathOptions(props) {\n    return pick(props, OPTIONS);\n  };\n\n  _proto.setStyle = function setStyle(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.leafletElement.setStyle(options);\n  };\n\n  _proto.setStyleIfChanged = function setStyleIfChanged(fromProps, toProps) {\n    var nextStyle = this.getPathOptions(toProps);\n\n    if (!isEqual(nextStyle, this.getPathOptions(fromProps))) {\n      this.setStyle(nextStyle);\n    }\n  };\n\n  return Path;\n}(MapLayer);\n\nexport { Path as default };","map":{"version":3,"sources":["/home/lipereira/projects/NLW/web/node_modules/react-leaflet/es/Path.js"],"names":["_extends","_inheritsLoose","isEqual","MapLayer","pick","OPTIONS","Path","_MapLayer","props","_this","call","contextValue","leaflet","popupContainer","leafletElement","_proto","prototype","componentDidUpdate","prevProps","setStyleIfChanged","getPathOptions","setStyle","options","fromProps","toProps","nextStyle","default"],"mappings":"AAAA;;AAEA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,IAAIC,OAAO,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,EAA8B,SAA9B,EAAyC,SAAzC,EAAoD,UAApD,EAAgE,WAAhE,EAA6E,YAA7E,EAA2F,MAA3F,EAAmG,WAAnG,EAAgH,aAAhH,EAA+H,UAA/H,EAA2I,qBAA3I,EAAkK,UAAlK,EAA8K,WAA9K,EAA2L;AACzM,aADc,EACC;AACf,MAFc,EAEN,aAFM,CAAd;;AAIA,IAAIC,IAAI,GAAG,aAAa,UAAUC,SAAV,EAAqB;AAC3CN,EAAAA,cAAc,CAACK,IAAD,EAAOC,SAAP,CAAd;;AAEA,WAASD,IAAT,CAAcE,KAAd,EAAqB;AACnB,QAAIC,KAAJ;;AAEAA,IAAAA,KAAK,GAAGF,SAAS,CAACG,IAAV,CAAe,IAAf,EAAqBF,KAArB,KAA+B,IAAvC;;AAEA,QAAIC,KAAK,CAACE,YAAN,IAAsB,IAA1B,EAAgC;AAC9BF,MAAAA,KAAK,CAACE,YAAN,GAAqBX,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKQ,KAAK,CAACI,OAAX,CAAT,EAA8B,EAA9B,EAAkC;AAC7DC,QAAAA,cAAc,EAAEJ,KAAK,CAACK;AADuC,OAAlC,CAA7B;AAGD;;AAED,WAAOL,KAAP;AACD;;AAED,MAAIM,MAAM,GAAGT,IAAI,CAACU,SAAlB;;AAEAD,EAAAA,MAAM,CAACE,kBAAP,GAA4B,SAASA,kBAAT,CAA4BC,SAA5B,EAAuC;AACjEX,IAAAA,SAAS,CAACS,SAAV,CAAoBC,kBAApB,CAAuCP,IAAvC,CAA4C,IAA5C,EAAkDQ,SAAlD;;AAEA,SAAKC,iBAAL,CAAuBD,SAAvB,EAAkC,KAAKV,KAAvC;AACD,GAJD;;AAMAO,EAAAA,MAAM,CAACK,cAAP,GAAwB,SAASA,cAAT,CAAwBZ,KAAxB,EAA+B;AACrD,WAAOJ,IAAI,CAACI,KAAD,EAAQH,OAAR,CAAX;AACD,GAFD;;AAIAU,EAAAA,MAAM,CAACM,QAAP,GAAkB,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;AAC3C,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,MAAAA,OAAO,GAAG,EAAV;AACD;;AAED,SAAKR,cAAL,CAAoBO,QAApB,CAA6BC,OAA7B;AACD,GAND;;AAQAP,EAAAA,MAAM,CAACI,iBAAP,GAA2B,SAASA,iBAAT,CAA2BI,SAA3B,EAAsCC,OAAtC,EAA+C;AACxE,QAAIC,SAAS,GAAG,KAAKL,cAAL,CAAoBI,OAApB,CAAhB;;AAEA,QAAI,CAACtB,OAAO,CAACuB,SAAD,EAAY,KAAKL,cAAL,CAAoBG,SAApB,CAAZ,CAAZ,EAAyD;AACvD,WAAKF,QAAL,CAAcI,SAAd;AACD;AACF,GAND;;AAQA,SAAOnB,IAAP;AACD,CA9CuB,CA8CtBH,QA9CsB,CAAxB;;AAgDA,SAASG,IAAI,IAAIoB,OAAjB","sourcesContent":["\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport isEqual from 'fast-deep-equal';\nimport MapLayer from './MapLayer';\nimport pick from './utils/pick';\nvar OPTIONS = ['stroke', 'color', 'weight', 'opacity', 'lineCap', 'lineJoin', 'dashArray', 'dashOffset', 'fill', 'fillColor', 'fillOpacity', 'fillRule', 'bubblingMouseEvents', 'renderer', 'className', // Interactive Layer\n'interactive', // Layer\n'pane', 'attribution'];\n\nvar Path = /*#__PURE__*/function (_MapLayer) {\n  _inheritsLoose(Path, _MapLayer);\n\n  function Path(props) {\n    var _this;\n\n    _this = _MapLayer.call(this, props) || this;\n\n    if (_this.contextValue == null) {\n      _this.contextValue = _extends(_extends({}, props.leaflet), {}, {\n        popupContainer: _this.leafletElement\n      });\n    }\n\n    return _this;\n  }\n\n  var _proto = Path.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    _MapLayer.prototype.componentDidUpdate.call(this, prevProps);\n\n    this.setStyleIfChanged(prevProps, this.props);\n  };\n\n  _proto.getPathOptions = function getPathOptions(props) {\n    return pick(props, OPTIONS);\n  };\n\n  _proto.setStyle = function setStyle(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.leafletElement.setStyle(options);\n  };\n\n  _proto.setStyleIfChanged = function setStyleIfChanged(fromProps, toProps) {\n    var nextStyle = this.getPathOptions(toProps);\n\n    if (!isEqual(nextStyle, this.getPathOptions(fromProps))) {\n      this.setStyle(nextStyle);\n    }\n  };\n\n  return Path;\n}(MapLayer);\n\nexport { Path as default };"]},"metadata":{},"sourceType":"module"}