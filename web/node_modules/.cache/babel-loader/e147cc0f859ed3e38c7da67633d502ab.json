{"ast":null,"code":"\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { GridLayer as LeafletGridLayer } from 'leaflet';\nimport MapLayer from './MapLayer';\n\nvar GridLayer = /*#__PURE__*/function (_MapLayer) {\n  _inheritsLoose(GridLayer, _MapLayer);\n\n  function GridLayer() {\n    return _MapLayer.apply(this, arguments) || this;\n  }\n\n  var _proto = GridLayer.prototype;\n\n  _proto.createLeafletElement = function createLeafletElement(props) {\n    return new LeafletGridLayer(this.getOptions(props));\n  };\n\n  _proto.updateLeafletElement = function updateLeafletElement(fromProps, toProps) {\n    var opacity = toProps.opacity,\n        zIndex = toProps.zIndex;\n\n    if (opacity !== fromProps.opacity) {\n      this.leafletElement.setOpacity(opacity);\n    }\n\n    if (zIndex !== fromProps.zIndex) {\n      this.leafletElement.setZIndex(zIndex);\n    }\n  };\n\n  _proto.getOptions = function getOptions(props) {\n    var options = _extends({}, _MapLayer.prototype.getOptions.call(this, props));\n\n    var map = props.leaflet.map;\n\n    if (map != null) {\n      // $FlowFixMe: Object spread\n      if (options.maxZoom == null && map.options.maxZoom != null) {\n        // $FlowFixMe: Object spread\n        options.maxZoom = map.options.maxZoom;\n      } // $FlowFixMe: Object spread\n\n\n      if (options.minZoom == null && map.options.minZoom != null) {\n        // $FlowFixMe: Object spread\n        options.minZoom = map.options.minZoom;\n      }\n    }\n\n    return options;\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return GridLayer;\n}(MapLayer);\n\nexport { GridLayer as default };","map":{"version":3,"sources":["/home/lipereira/projects/NLW/web/node_modules/react-leaflet/es/GridLayer.js"],"names":["_extends","_inheritsLoose","GridLayer","LeafletGridLayer","MapLayer","_MapLayer","apply","arguments","_proto","prototype","createLeafletElement","props","getOptions","updateLeafletElement","fromProps","toProps","opacity","zIndex","leafletElement","setOpacity","setZIndex","options","call","map","leaflet","maxZoom","minZoom","render","default"],"mappings":"AAAA;;AAEA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,SAAS,IAAIC,gBAAtB,QAA8C,SAA9C;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAIF,SAAS,GAAG,aAAa,UAAUG,SAAV,EAAqB;AAChDJ,EAAAA,cAAc,CAACC,SAAD,EAAYG,SAAZ,CAAd;;AAEA,WAASH,SAAT,GAAqB;AACnB,WAAOG,SAAS,CAACC,KAAV,CAAgB,IAAhB,EAAsBC,SAAtB,KAAoC,IAA3C;AACD;;AAED,MAAIC,MAAM,GAAGN,SAAS,CAACO,SAAvB;;AAEAD,EAAAA,MAAM,CAACE,oBAAP,GAA8B,SAASA,oBAAT,CAA8BC,KAA9B,EAAqC;AACjE,WAAO,IAAIR,gBAAJ,CAAqB,KAAKS,UAAL,CAAgBD,KAAhB,CAArB,CAAP;AACD,GAFD;;AAIAH,EAAAA,MAAM,CAACK,oBAAP,GAA8B,SAASA,oBAAT,CAA8BC,SAA9B,EAAyCC,OAAzC,EAAkD;AAC9E,QAAIC,OAAO,GAAGD,OAAO,CAACC,OAAtB;AAAA,QACIC,MAAM,GAAGF,OAAO,CAACE,MADrB;;AAGA,QAAID,OAAO,KAAKF,SAAS,CAACE,OAA1B,EAAmC;AACjC,WAAKE,cAAL,CAAoBC,UAApB,CAA+BH,OAA/B;AACD;;AAED,QAAIC,MAAM,KAAKH,SAAS,CAACG,MAAzB,EAAiC;AAC/B,WAAKC,cAAL,CAAoBE,SAApB,CAA8BH,MAA9B;AACD;AACF,GAXD;;AAaAT,EAAAA,MAAM,CAACI,UAAP,GAAoB,SAASA,UAAT,CAAoBD,KAApB,EAA2B;AAC7C,QAAIU,OAAO,GAAGrB,QAAQ,CAAC,EAAD,EAAKK,SAAS,CAACI,SAAV,CAAoBG,UAApB,CAA+BU,IAA/B,CAAoC,IAApC,EAA0CX,KAA1C,CAAL,CAAtB;;AAEA,QAAIY,GAAG,GAAGZ,KAAK,CAACa,OAAN,CAAcD,GAAxB;;AAEA,QAAIA,GAAG,IAAI,IAAX,EAAiB;AACf;AACA,UAAIF,OAAO,CAACI,OAAR,IAAmB,IAAnB,IAA2BF,GAAG,CAACF,OAAJ,CAAYI,OAAZ,IAAuB,IAAtD,EAA4D;AAC1D;AACAJ,QAAAA,OAAO,CAACI,OAAR,GAAkBF,GAAG,CAACF,OAAJ,CAAYI,OAA9B;AACD,OALc,CAKb;;;AAGF,UAAIJ,OAAO,CAACK,OAAR,IAAmB,IAAnB,IAA2BH,GAAG,CAACF,OAAJ,CAAYK,OAAZ,IAAuB,IAAtD,EAA4D;AAC1D;AACAL,QAAAA,OAAO,CAACK,OAAR,GAAkBH,GAAG,CAACF,OAAJ,CAAYK,OAA9B;AACD;AACF;;AAED,WAAOL,OAAP;AACD,GApBD;;AAsBAb,EAAAA,MAAM,CAACmB,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,WAAO,IAAP;AACD,GAFD;;AAIA,SAAOzB,SAAP;AACD,CArD4B,CAqD3BE,QArD2B,CAA7B;;AAuDA,SAASF,SAAS,IAAI0B,OAAtB","sourcesContent":["\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { GridLayer as LeafletGridLayer } from 'leaflet';\nimport MapLayer from './MapLayer';\n\nvar GridLayer = /*#__PURE__*/function (_MapLayer) {\n  _inheritsLoose(GridLayer, _MapLayer);\n\n  function GridLayer() {\n    return _MapLayer.apply(this, arguments) || this;\n  }\n\n  var _proto = GridLayer.prototype;\n\n  _proto.createLeafletElement = function createLeafletElement(props) {\n    return new LeafletGridLayer(this.getOptions(props));\n  };\n\n  _proto.updateLeafletElement = function updateLeafletElement(fromProps, toProps) {\n    var opacity = toProps.opacity,\n        zIndex = toProps.zIndex;\n\n    if (opacity !== fromProps.opacity) {\n      this.leafletElement.setOpacity(opacity);\n    }\n\n    if (zIndex !== fromProps.zIndex) {\n      this.leafletElement.setZIndex(zIndex);\n    }\n  };\n\n  _proto.getOptions = function getOptions(props) {\n    var options = _extends({}, _MapLayer.prototype.getOptions.call(this, props));\n\n    var map = props.leaflet.map;\n\n    if (map != null) {\n      // $FlowFixMe: Object spread\n      if (options.maxZoom == null && map.options.maxZoom != null) {\n        // $FlowFixMe: Object spread\n        options.maxZoom = map.options.maxZoom;\n      } // $FlowFixMe: Object spread\n\n\n      if (options.minZoom == null && map.options.minZoom != null) {\n        // $FlowFixMe: Object spread\n        options.minZoom = map.options.minZoom;\n      }\n    }\n\n    return options;\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return GridLayer;\n}(MapLayer);\n\nexport { GridLayer as default };"]},"metadata":{},"sourceType":"module"}