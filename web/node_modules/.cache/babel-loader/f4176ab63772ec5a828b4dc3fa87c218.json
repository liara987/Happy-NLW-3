{"ast":null,"code":"\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { Marker as LeafletMarker } from 'leaflet';\nimport React from 'react';\nimport { LeafletProvider, withLeaflet } from './context';\nimport MapLayer from './MapLayer';\n\nvar Marker = /*#__PURE__*/function (_MapLayer) {\n  _inheritsLoose(Marker, _MapLayer);\n\n  function Marker() {\n    return _MapLayer.apply(this, arguments) || this;\n  }\n\n  var _proto = Marker.prototype;\n\n  _proto.createLeafletElement = function createLeafletElement(props) {\n    var el = new LeafletMarker(props.position, this.getOptions(props));\n    this.contextValue = _extends(_extends({}, props.leaflet), {}, {\n      popupContainer: el\n    });\n    return el;\n  };\n\n  _proto.updateLeafletElement = function updateLeafletElement(fromProps, toProps) {\n    if (toProps.position !== fromProps.position) {\n      this.leafletElement.setLatLng(toProps.position);\n    }\n\n    if (toProps.icon !== fromProps.icon) {\n      this.leafletElement.setIcon(toProps.icon);\n    }\n\n    if (toProps.zIndexOffset !== fromProps.zIndexOffset) {\n      this.leafletElement.setZIndexOffset(toProps.zIndexOffset);\n    }\n\n    if (toProps.opacity !== fromProps.opacity) {\n      this.leafletElement.setOpacity(toProps.opacity);\n    }\n\n    if (toProps.draggable !== fromProps.draggable) {\n      if (toProps.draggable === true) {\n        this.leafletElement.dragging.enable();\n      } else {\n        this.leafletElement.dragging.disable();\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    var children = this.props.children;\n    return children == null || this.contextValue == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: this.contextValue\n    }, children);\n  };\n\n  return Marker;\n}(MapLayer);\n\nexport default withLeaflet(Marker);","map":{"version":3,"sources":["/home/lipereira/projects/NLW/web/node_modules/react-leaflet/es/Marker.js"],"names":["_extends","_inheritsLoose","Marker","LeafletMarker","React","LeafletProvider","withLeaflet","MapLayer","_MapLayer","apply","arguments","_proto","prototype","createLeafletElement","props","el","position","getOptions","contextValue","leaflet","popupContainer","updateLeafletElement","fromProps","toProps","leafletElement","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","draggable","dragging","enable","disable","render","children","createElement","value"],"mappings":"AAAA;;AAEA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,MAAM,IAAIC,aAAnB,QAAwC,SAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,WAA7C;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAIL,MAAM,GAAG,aAAa,UAAUM,SAAV,EAAqB;AAC7CP,EAAAA,cAAc,CAACC,MAAD,EAASM,SAAT,CAAd;;AAEA,WAASN,MAAT,GAAkB;AAChB,WAAOM,SAAS,CAACC,KAAV,CAAgB,IAAhB,EAAsBC,SAAtB,KAAoC,IAA3C;AACD;;AAED,MAAIC,MAAM,GAAGT,MAAM,CAACU,SAApB;;AAEAD,EAAAA,MAAM,CAACE,oBAAP,GAA8B,SAASA,oBAAT,CAA8BC,KAA9B,EAAqC;AACjE,QAAIC,EAAE,GAAG,IAAIZ,aAAJ,CAAkBW,KAAK,CAACE,QAAxB,EAAkC,KAAKC,UAAL,CAAgBH,KAAhB,CAAlC,CAAT;AACA,SAAKI,YAAL,GAAoBlB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKc,KAAK,CAACK,OAAX,CAAT,EAA8B,EAA9B,EAAkC;AAC5DC,MAAAA,cAAc,EAAEL;AAD4C,KAAlC,CAA5B;AAGA,WAAOA,EAAP;AACD,GAND;;AAQAJ,EAAAA,MAAM,CAACU,oBAAP,GAA8B,SAASA,oBAAT,CAA8BC,SAA9B,EAAyCC,OAAzC,EAAkD;AAC9E,QAAIA,OAAO,CAACP,QAAR,KAAqBM,SAAS,CAACN,QAAnC,EAA6C;AAC3C,WAAKQ,cAAL,CAAoBC,SAApB,CAA8BF,OAAO,CAACP,QAAtC;AACD;;AAED,QAAIO,OAAO,CAACG,IAAR,KAAiBJ,SAAS,CAACI,IAA/B,EAAqC;AACnC,WAAKF,cAAL,CAAoBG,OAApB,CAA4BJ,OAAO,CAACG,IAApC;AACD;;AAED,QAAIH,OAAO,CAACK,YAAR,KAAyBN,SAAS,CAACM,YAAvC,EAAqD;AACnD,WAAKJ,cAAL,CAAoBK,eAApB,CAAoCN,OAAO,CAACK,YAA5C;AACD;;AAED,QAAIL,OAAO,CAACO,OAAR,KAAoBR,SAAS,CAACQ,OAAlC,EAA2C;AACzC,WAAKN,cAAL,CAAoBO,UAApB,CAA+BR,OAAO,CAACO,OAAvC;AACD;;AAED,QAAIP,OAAO,CAACS,SAAR,KAAsBV,SAAS,CAACU,SAApC,EAA+C;AAC7C,UAAIT,OAAO,CAACS,SAAR,KAAsB,IAA1B,EAAgC;AAC9B,aAAKR,cAAL,CAAoBS,QAApB,CAA6BC,MAA7B;AACD,OAFD,MAEO;AACL,aAAKV,cAAL,CAAoBS,QAApB,CAA6BE,OAA7B;AACD;AACF;AACF,GAxBD;;AA0BAxB,EAAAA,MAAM,CAACyB,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,QAAIC,QAAQ,GAAG,KAAKvB,KAAL,CAAWuB,QAA1B;AACA,WAAOA,QAAQ,IAAI,IAAZ,IAAoB,KAAKnB,YAAL,IAAqB,IAAzC,GAAgD,IAAhD,GAAuD,aAAad,KAAK,CAACkC,aAAN,CAAoBjC,eAApB,EAAqC;AAC9GkC,MAAAA,KAAK,EAAE,KAAKrB;AADkG,KAArC,EAExEmB,QAFwE,CAA3E;AAGD,GALD;;AAOA,SAAOnC,MAAP;AACD,CAnDyB,CAmDxBK,QAnDwB,CAA1B;;AAqDA,eAAeD,WAAW,CAACJ,MAAD,CAA1B","sourcesContent":["\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { Marker as LeafletMarker } from 'leaflet';\nimport React from 'react';\nimport { LeafletProvider, withLeaflet } from './context';\nimport MapLayer from './MapLayer';\n\nvar Marker = /*#__PURE__*/function (_MapLayer) {\n  _inheritsLoose(Marker, _MapLayer);\n\n  function Marker() {\n    return _MapLayer.apply(this, arguments) || this;\n  }\n\n  var _proto = Marker.prototype;\n\n  _proto.createLeafletElement = function createLeafletElement(props) {\n    var el = new LeafletMarker(props.position, this.getOptions(props));\n    this.contextValue = _extends(_extends({}, props.leaflet), {}, {\n      popupContainer: el\n    });\n    return el;\n  };\n\n  _proto.updateLeafletElement = function updateLeafletElement(fromProps, toProps) {\n    if (toProps.position !== fromProps.position) {\n      this.leafletElement.setLatLng(toProps.position);\n    }\n\n    if (toProps.icon !== fromProps.icon) {\n      this.leafletElement.setIcon(toProps.icon);\n    }\n\n    if (toProps.zIndexOffset !== fromProps.zIndexOffset) {\n      this.leafletElement.setZIndexOffset(toProps.zIndexOffset);\n    }\n\n    if (toProps.opacity !== fromProps.opacity) {\n      this.leafletElement.setOpacity(toProps.opacity);\n    }\n\n    if (toProps.draggable !== fromProps.draggable) {\n      if (toProps.draggable === true) {\n        this.leafletElement.dragging.enable();\n      } else {\n        this.leafletElement.dragging.disable();\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    var children = this.props.children;\n    return children == null || this.contextValue == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: this.contextValue\n    }, children);\n  };\n\n  return Marker;\n}(MapLayer);\n\nexport default withLeaflet(Marker);"]},"metadata":{},"sourceType":"module"}