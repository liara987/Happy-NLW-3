{"ast":null,"code":"\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\"; // flowlint sketchy-null-string:off\n\nimport React, { Component } from 'react';\nimport warning from 'warning';\nimport { LeafletProvider, withLeaflet } from './context';\nimport { addClassName, removeClassName } from './utils/updateClassName';\nimport omit from './utils/omit';\nvar idCounter = 0;\n\nvar uniqueId = function uniqueId() {\n  return ++idCounter;\n};\n\nvar LEAFLET_PANES = ['tile', 'shadow', 'overlay', 'map', 'marker', 'tooltip', 'popup'];\nvar PANE_RE = /-*pane/gi;\n\nvar isLeafletPane = function isLeafletPane(name) {\n  return LEAFLET_PANES.indexOf(name.replace(PANE_RE, '')) !== -1;\n};\n\nvar paneStyles = {\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\n\nvar Pane = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Pane, _Component);\n\n  function Pane() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: undefined,\n      context: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setStyle\", function (_temp) {\n      var _ref = _temp === void 0 ? _this.props : _temp,\n          style = _ref.style,\n          className = _ref.className;\n\n      var pane = _this.getPane(_this.state.name);\n\n      if (pane) {\n        if (className) {\n          addClassName(pane, className);\n        }\n\n        if (style) {\n          // Without the cast, Flow throws this error:\n          //   Cannot assign style[key] to pane.style[key] because string\n          //   is incompatible with number.\n          Object.keys(style).forEach(function (key) {\n            pane.style[key] = style[key];\n          });\n        }\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = Pane.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.createPane(this.props);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (!this.state.name) {\n      // Do nothing if this.state.name is undefined due to errors or\n      // an invalid props.name value\n      return;\n    } // If the 'name' prop has changed the current pane is unmounted and a new\n    // pane is created.\n\n\n    if (this.props.name !== prevProps.name) {\n      this.removePane();\n      this.createPane(this.props);\n    } else {\n      // Remove the previous css class name from the pane if it has changed.\n      // setStyle() will take care of adding in the updated className\n      if (prevProps.className && this.props.className !== prevProps.className) {\n        var pane = this.getPane(this.state.name);\n\n        if (pane != null && prevProps.className != null) {\n          removeClassName(pane, prevProps.className);\n        }\n      } // Update the pane's DOM node style and class\n\n\n      this.setStyle(this.props);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.removePane();\n  };\n\n  _proto.createPane = function createPane(props) {\n    var map = props.leaflet.map;\n    var name = props.name || \"pane-\" + uniqueId();\n\n    if (map != null && map.createPane != null) {\n      var isDefault = isLeafletPane(name);\n      var existing = isDefault || this.getPane(name);\n\n      if (existing == null) {\n        map.createPane(name, this.getParentPane());\n      } else {\n        var message = isDefault ? \"You must use a unique name for a pane that is not a default leaflet pane (\" + name + \")\" : \"A pane with this name already exists. (\" + name + \")\";\n        process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n      }\n\n      this.setState({\n        name: name,\n        context: _extends(_extends({}, props.leaflet), {}, {\n          pane: name\n        })\n      }, this.setStyle);\n    }\n  };\n\n  _proto.removePane = function removePane() {\n    // Remove the created pane\n    var name = this.state.name;\n\n    if (name != null) {\n      var pane = this.getPane(name);\n      if (pane != null && pane.remove) pane.remove();\n      var map = this.props.leaflet.map;\n\n      if (map != null && map._panes != null) {\n        map._panes = omit(map._panes, name);\n        map._paneRenderers = omit(map._paneRenderers, name);\n      }\n    }\n  };\n\n  _proto.getParentPane = function getParentPane() {\n    return this.getPane(this.props.pane || this.props.leaflet.pane);\n  };\n\n  _proto.getPane = function getPane(name) {\n    if (name != null && this.props.leaflet.map != null) {\n      return this.props.leaflet.map.getPane(name);\n    }\n  };\n\n  _proto.render = function render() {\n    var context = this.state.context;\n    return context ? /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: paneStyles\n    }, this.props.children)) : null;\n  };\n\n  return Pane;\n}(Component);\n\nexport default withLeaflet(Pane);","map":{"version":3,"sources":["/home/lipereira/projects/NLW/web/node_modules/react-leaflet/es/Pane.js"],"names":["_extends","_assertThisInitialized","_inheritsLoose","_defineProperty","React","Component","warning","LeafletProvider","withLeaflet","addClassName","removeClassName","omit","idCounter","uniqueId","LEAFLET_PANES","PANE_RE","isLeafletPane","name","indexOf","replace","paneStyles","position","top","right","bottom","left","Pane","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","undefined","context","_temp","_ref","props","style","className","pane","getPane","state","Object","keys","forEach","key","_proto","prototype","componentDidMount","createPane","componentDidUpdate","prevProps","removePane","setStyle","componentWillUnmount","map","leaflet","isDefault","existing","getParentPane","message","process","env","NODE_ENV","setState","remove","_panes","_paneRenderers","render","createElement","value","children"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n// flowlint sketchy-null-string:off\nimport React, { Component } from 'react';\nimport warning from 'warning';\nimport { LeafletProvider, withLeaflet } from './context';\nimport { addClassName, removeClassName } from './utils/updateClassName';\nimport omit from './utils/omit';\nvar idCounter = 0;\n\nvar uniqueId = function uniqueId() {\n  return ++idCounter;\n};\n\nvar LEAFLET_PANES = ['tile', 'shadow', 'overlay', 'map', 'marker', 'tooltip', 'popup'];\nvar PANE_RE = /-*pane/gi;\n\nvar isLeafletPane = function isLeafletPane(name) {\n  return LEAFLET_PANES.indexOf(name.replace(PANE_RE, '')) !== -1;\n};\n\nvar paneStyles = {\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\n\nvar Pane = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Pane, _Component);\n\n  function Pane() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: undefined,\n      context: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setStyle\", function (_temp) {\n      var _ref = _temp === void 0 ? _this.props : _temp,\n          style = _ref.style,\n          className = _ref.className;\n\n      var pane = _this.getPane(_this.state.name);\n\n      if (pane) {\n        if (className) {\n          addClassName(pane, className);\n        }\n\n        if (style) {\n          // Without the cast, Flow throws this error:\n          //   Cannot assign style[key] to pane.style[key] because string\n          //   is incompatible with number.\n          Object.keys(style).forEach(function (key) {\n            pane.style[key] = style[key];\n          });\n        }\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = Pane.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.createPane(this.props);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (!this.state.name) {\n      // Do nothing if this.state.name is undefined due to errors or\n      // an invalid props.name value\n      return;\n    } // If the 'name' prop has changed the current pane is unmounted and a new\n    // pane is created.\n\n\n    if (this.props.name !== prevProps.name) {\n      this.removePane();\n      this.createPane(this.props);\n    } else {\n      // Remove the previous css class name from the pane if it has changed.\n      // setStyle() will take care of adding in the updated className\n      if (prevProps.className && this.props.className !== prevProps.className) {\n        var pane = this.getPane(this.state.name);\n\n        if (pane != null && prevProps.className != null) {\n          removeClassName(pane, prevProps.className);\n        }\n      } // Update the pane's DOM node style and class\n\n\n      this.setStyle(this.props);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.removePane();\n  };\n\n  _proto.createPane = function createPane(props) {\n    var map = props.leaflet.map;\n    var name = props.name || \"pane-\" + uniqueId();\n\n    if (map != null && map.createPane != null) {\n      var isDefault = isLeafletPane(name);\n      var existing = isDefault || this.getPane(name);\n\n      if (existing == null) {\n        map.createPane(name, this.getParentPane());\n      } else {\n        var message = isDefault ? \"You must use a unique name for a pane that is not a default leaflet pane (\" + name + \")\" : \"A pane with this name already exists. (\" + name + \")\";\n        process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n      }\n\n      this.setState({\n        name: name,\n        context: _extends(_extends({}, props.leaflet), {}, {\n          pane: name\n        })\n      }, this.setStyle);\n    }\n  };\n\n  _proto.removePane = function removePane() {\n    // Remove the created pane\n    var name = this.state.name;\n\n    if (name != null) {\n      var pane = this.getPane(name);\n      if (pane != null && pane.remove) pane.remove();\n      var map = this.props.leaflet.map;\n\n      if (map != null && map._panes != null) {\n        map._panes = omit(map._panes, name);\n        map._paneRenderers = omit(map._paneRenderers, name);\n      }\n    }\n  };\n\n  _proto.getParentPane = function getParentPane() {\n    return this.getPane(this.props.pane || this.props.leaflet.pane);\n  };\n\n  _proto.getPane = function getPane(name) {\n    if (name != null && this.props.leaflet.map != null) {\n      return this.props.leaflet.map.getPane(name);\n    }\n  };\n\n  _proto.render = function render() {\n    var context = this.state.context;\n    return context ? /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: paneStyles\n    }, this.props.children)) : null;\n  };\n\n  return Pane;\n}(Component);\n\nexport default withLeaflet(Pane);"]},"metadata":{},"sourceType":"module"}